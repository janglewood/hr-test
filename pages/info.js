import React, { useCallback, useMemo, useState } from "react";
import createApolloClient from "../apollo-client";
import Head from "next/head";
import { Flex, List, OrderedList, UnorderedList } from "@chakra-ui/react";
import { GET_COUNTRIES } from "../src/graphql/queries/countries";
import { CountryModal } from "../src/components/CountryModal";
import { InfoListItem } from "../src/components/InfoListItem";

export default function Info({ countries }) {
  const [countryModalCode, setCountryModalCode] = useState();

  const country = useMemo(
    () => countries.find(({ code }) => code === countryModalCode),
    [countries, countryModalCode]
  );

  const onClose = useCallback(() => {
    setCountryModalCode();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        direction="column"
        p={10}
        color="#000"
        rounded="xl"
        shadow="xl"
        border="1px solid #e9e9e9"
        width="100%"
        maxHeight="calc(100vh - 54px - 64px - 32px)" // 100vh - header height - gap - layout padding
        overflow=" scroll"
        bgColor="#fff"
      >
        <List display="flex" flexDirection="column">
          {countries.map(({ code, name, emoji }) => (
            <InfoListItem
              key={code}
              name={name}
              emoji={emoji}
              onClick={() => setCountryModalCode(code)}
            />
          ))}
        </List>
      </Flex>

      <CountryModal country={country} onClose={onClose} />
    </>
  );
}

// we need this to render page on the server
export async function getServerSideProps() {
  const client = createApolloClient();
  const { data } = await client.query({
    query: GET_COUNTRIES,
  });

  return {
    props: {
      countries: data.countries.slice(0, 20),
    },
  };
}
